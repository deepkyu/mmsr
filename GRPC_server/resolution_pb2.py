# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: resolution.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='resolution.proto',
  package='maum.brain.resolution',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=b'\n\x10resolution.proto\x12\x15maum.brain.resolution\"\x1f\n\tFileChunk\x12\x12\n\nfile_bytes\x18\x01 \x01(\x0c\"C\n\x0cUploadStatus\x12\x0e\n\x06status\x18\x01 \x01(\x05\x12\x10\n\x08\x66ile_key\x18\x02 \x01(\t\x12\x11\n\terror_msg\x18\x03 \x01(\t\"0\n\rProcessStatus\x12\x0e\n\x06status\x18\x01 \x01(\x05\x12\x0f\n\x07message\x18\x02 \x01(\t\"\x1e\n\nKeyMessage\x12\x10\n\x08\x66ile_key\x18\x01 \x01(\t2\x9a\x02\n\x13SuperResolutionGRPC\x12S\n\x06Upload\x12 .maum.brain.resolution.FileChunk\x1a#.maum.brain.resolution.UploadStatus\"\x00(\x01\x12Y\n\x0c\x43heckProcess\x12!.maum.brain.resolution.KeyMessage\x1a$.maum.brain.resolution.ProcessStatus\"\x00\x12S\n\x08\x44ownload\x12!.maum.brain.resolution.KeyMessage\x1a .maum.brain.resolution.FileChunk\"\x00\x30\x01\x62\x06proto3'
)




_FILECHUNK = _descriptor.Descriptor(
  name='FileChunk',
  full_name='maum.brain.resolution.FileChunk',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='file_bytes', full_name='maum.brain.resolution.FileChunk.file_bytes', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=43,
  serialized_end=74,
)


_UPLOADSTATUS = _descriptor.Descriptor(
  name='UploadStatus',
  full_name='maum.brain.resolution.UploadStatus',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='maum.brain.resolution.UploadStatus.status', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='file_key', full_name='maum.brain.resolution.UploadStatus.file_key', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='error_msg', full_name='maum.brain.resolution.UploadStatus.error_msg', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=76,
  serialized_end=143,
)


_PROCESSSTATUS = _descriptor.Descriptor(
  name='ProcessStatus',
  full_name='maum.brain.resolution.ProcessStatus',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='maum.brain.resolution.ProcessStatus.status', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='message', full_name='maum.brain.resolution.ProcessStatus.message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=145,
  serialized_end=193,
)


_KEYMESSAGE = _descriptor.Descriptor(
  name='KeyMessage',
  full_name='maum.brain.resolution.KeyMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='file_key', full_name='maum.brain.resolution.KeyMessage.file_key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=195,
  serialized_end=225,
)

DESCRIPTOR.message_types_by_name['FileChunk'] = _FILECHUNK
DESCRIPTOR.message_types_by_name['UploadStatus'] = _UPLOADSTATUS
DESCRIPTOR.message_types_by_name['ProcessStatus'] = _PROCESSSTATUS
DESCRIPTOR.message_types_by_name['KeyMessage'] = _KEYMESSAGE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

FileChunk = _reflection.GeneratedProtocolMessageType('FileChunk', (_message.Message,), {
  'DESCRIPTOR' : _FILECHUNK,
  '__module__' : 'resolution_pb2'
  # @@protoc_insertion_point(class_scope:maum.brain.resolution.FileChunk)
  })
_sym_db.RegisterMessage(FileChunk)

UploadStatus = _reflection.GeneratedProtocolMessageType('UploadStatus', (_message.Message,), {
  'DESCRIPTOR' : _UPLOADSTATUS,
  '__module__' : 'resolution_pb2'
  # @@protoc_insertion_point(class_scope:maum.brain.resolution.UploadStatus)
  })
_sym_db.RegisterMessage(UploadStatus)

ProcessStatus = _reflection.GeneratedProtocolMessageType('ProcessStatus', (_message.Message,), {
  'DESCRIPTOR' : _PROCESSSTATUS,
  '__module__' : 'resolution_pb2'
  # @@protoc_insertion_point(class_scope:maum.brain.resolution.ProcessStatus)
  })
_sym_db.RegisterMessage(ProcessStatus)

KeyMessage = _reflection.GeneratedProtocolMessageType('KeyMessage', (_message.Message,), {
  'DESCRIPTOR' : _KEYMESSAGE,
  '__module__' : 'resolution_pb2'
  # @@protoc_insertion_point(class_scope:maum.brain.resolution.KeyMessage)
  })
_sym_db.RegisterMessage(KeyMessage)



_SUPERRESOLUTIONGRPC = _descriptor.ServiceDescriptor(
  name='SuperResolutionGRPC',
  full_name='maum.brain.resolution.SuperResolutionGRPC',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=228,
  serialized_end=510,
  methods=[
  _descriptor.MethodDescriptor(
    name='Upload',
    full_name='maum.brain.resolution.SuperResolutionGRPC.Upload',
    index=0,
    containing_service=None,
    input_type=_FILECHUNK,
    output_type=_UPLOADSTATUS,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CheckProcess',
    full_name='maum.brain.resolution.SuperResolutionGRPC.CheckProcess',
    index=1,
    containing_service=None,
    input_type=_KEYMESSAGE,
    output_type=_PROCESSSTATUS,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Download',
    full_name='maum.brain.resolution.SuperResolutionGRPC.Download',
    index=2,
    containing_service=None,
    input_type=_KEYMESSAGE,
    output_type=_FILECHUNK,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_SUPERRESOLUTIONGRPC)

DESCRIPTOR.services_by_name['SuperResolutionGRPC'] = _SUPERRESOLUTIONGRPC

# @@protoc_insertion_point(module_scope)
